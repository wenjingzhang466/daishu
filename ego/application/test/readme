|-application 应用目录（几乎整个项目的内容都写在这里）
    |-index（这里的文件夹tp5叫做模块-----一般是前台模块，也可以根据需要需求修改成其他（例如：home），需要修改配置文件，修改默认模块、控制器、操作）  【注】：TP5默认只有一个index文件（模块）和一个控制层（conrroller），我们在写代码的时候会自己新建一个model和view,这样就组成了这个Index模块儿的MVC(controller控制层，model模型层，view视图层),如需后台(一般来说都需要)，则需要新建一个后台模块(admin)
        |-controller(控制层)
        |-model(模型层)
        |-view(视图层)
    |-admin(后台模块)
        |-controller(控制层)
        |-model(模型层)
        |-view(视图层)


|- command.php 是控制台的配置文件，当我们用命令行执行thinkphp的时候，它会读取command.php的配置


|- common.php 它是项目的公共文件，当我们编写一些通用函数的时候，比如我们写一个函数，想在所有的模块儿中都能调用，那么我们就可以把函数写在改文件中，它就可以注册到全局，在任何地方都可以调用


|- config.php 它是应用的配置文件，整个用用都读取这个配置，也就是admin模块儿和index模块儿会通用这个配置


|- database.php 它是数据库配置文件，如果我们需要连接数据库，那么我们只需要修改database.php的配置就可以了


|- route.php 它是路由文件，当我们想对URL进行美化，那么我们就可以修改此文件，对其增加一些路由配置，就可以达到美化的效果

|- tags.php 它是应用行为扩展文件，在thinkphp中，它为我们埋下了很多钩子，我们可以对框架进行扩展，而不需要修改框架本身的源码，我们需要在某一个钩子上注册某些函数，或者是注册某些行为，来通过行为来改变框架的执行流程     

|-extend  目录,这个目录是我们下载第三方库时候使用的，当然我们不是通过composer来下载的，比如说我们有一个第三方库，我们用着比较好用，但是它没有composer包，我们就可以将类库下载到extend目录，之后我们修改一下命名空间，就可以直接在我们的应用中使用
|-publiic 我们网站的根目录，也就是说我们网站根目录下所有的这些文件都是允许访问的
    |-static 主要用来放静态文件，比如说css,js,图片等等
    |-index.php 整个网站或整个应用的入口文件，所有的请求都会经过index.php之后再去转发
    |-router.php 它是框架快速启动的测试文件，比如你本地没有安装Apache，只安装了PHP，那么我们可以同过，PHP内置的workserver来启动，通过这个文件，我们就可以启动这个框架


|-runtime 它是网站运行中的缓存文件，它包括日志，缓存和编译文件等等。
|-thinkphp 它是框架文件,也就是说thinkphp5的框架都在里边
    |-lang 里边是语言包
    |-library 目录是框架的核心，它里边有think(它是整个框架的核心文件)和traits(它是类库的扩展)两个目录
        |-think Think 类库包目录
        |-traits 系统 Traits 目录
    |-tpl 是我们框架默认的一些模板（了解知识）
        |-default_index.tpl 它是我们自动生成的控制器模板文件


|-dispatch_jump.tpl它是我们网站发出成功或失败的中间跳转文件


|-page_trace.tpl它是我们调试时显示的模板文件


|-think_exception.tpl它是我们抛出异常时页面展示的文件

|-base.php 定义一些常量
|-console.php 它是控制台的入口文件
|-convention.php 是框架惯例配置文件
|-help.php 助手函数
|-start.php是框架启动文件

|-vendor 是composer安装过程中生成的目录，通过composer安装的所有类库都被安装在了这个目录中
